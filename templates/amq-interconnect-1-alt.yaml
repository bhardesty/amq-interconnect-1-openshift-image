kind: Template
apiVersion: v1
metadata:
  name: amq-interconnect-1-alt
  annotations:
    description: Template for Red Hat Interconnect Router using ConfigMap and StatefulSet.
    iconClass: icon-amq
    openshift.io/provider-display-name: Red Hat, Inc.
    tags: messaging,amq
    version: 1.4.10
    openshift.io/display-name: Red Hat Interconnect Router 1.x
labels:
  template: amq-interconnect-1-alt
  xpaas: 1.4.10
message: A new router service has been created in your project.
parameters:
- displayName: Application Name
  description: The name for this deployment of the AMQ Interconnect Message Router.
  name: APPLICATION_NAME
  value: myrouter
  required: true
- displayName: ImageStream Namespace
  description: Namespace in which the ImageStreams for Red Hat Middleware images are
    installed. These ImageStreams are normally installed in the openshift namespace.
    You should only need to modify this if you've installed the ImageStreams in a
    different namespace/project.
  name: IMAGE_STREAM_NAMESPACE
  value: openshift
- displayName: qdrouterd.conf
  description: The initial router configuration file
  name: QDROUTERD_CONF
  value: |-
    router {
        mode: interior
        id: ${HOSTNAME}
    }

    listener {
        host: 0.0.0.0
        port: amqp
        authenticatePeer: no
        saslMechanisms: ANONYMOUS
    }

    listener {
        host: 0.0.0.0
        port: amqps
        authenticatePeer: no
        saslMechanisms: ANONYMOUS
        sslProfile: service_tls
    }

    listener {
      host: 0.0.0.0
      port: 55672
      role: inter-router
      authenticatePeer: no
      saslMechanisms: ANONYMOUS
      sslProfile: inter_router_tls
    }

    sslProfile {
       name: service_tls
       certFile: /etc/qpid-dispatch-certs/tls.crt
       privateKeyFile: /etc/qpid-dispatch-certs/tls.key
    }

    sslProfile {
       name: inter_router_tls
       certFile: /etc/qpid-dispatch-certs/tls.crt
       privateKeyFile: /etc/qpid-dispatch-certs/tls.key
       caCertFile: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
    }

    address {
        prefix: closest
        distribution: closest
    }

    address {
        prefix: multicast
        distribution: multicast
    }

    address {
        prefix: unicast
        distribution: closest
    }

    address {
        prefix: exclusive
        distribution: closest
    }

    address {
        prefix: broadcast
        distribution: multicast
    }

objects:
- kind: Service
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: ${APPLICATION_NAME}
    annotations:
      description: AMQ Interconnect Service.
      service.alpha.openshift.io/serving-cert-secret-name: ${APPLICATION_NAME}-cert
  spec:
    ports:
    - port: 5672
      name: amqp
      targetPort: 5672
    - port: 5671
      name: amqps
      targetPort: 5671
    - port: 55672
      name: inter-router
      targetPort: 55672
    selector:
      router-group: ${APPLICATION_NAME}
- kind: Service
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}-headless
    labels:
      application: ${APPLICATION_NAME}
    annotations:
      description: Headless Service for StatefulSet.
  spec:
    ports:
    - port: 55672
      targetPort: 55672
    selector:
      router-group: ${APPLICATION_NAME}
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: ${APPLICATION_NAME}
    annotations:
      description: AMQ Interconnect Message Router.
  spec:
    serviceName: ${APPLICATION_NAME}-headless
    replicas: 1
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          router-group: ${APPLICATION_NAME}
      spec:
        containers:
        - name: router
          env:
          - name: APPLICATION_NAME
            value: "${APPLICATION_NAME}"
          - name: QDROUTERD_CONF
            value: "${QDROUTERD_CONF}"
          - name: QDROUTERD_AUTO_MESH_DISCOVERY
            value: "INFER"
          image: amq-interconnect-11-openshift:latest
          imagePullPolicy: Always
          ports:
          - name: amqp
            containerPort: 5672
            protocol: TCP
          - name: amqps
            containerPort: 5671
            protocol: TCP
          - name: inter-router
            containerPort: 55672
            protocol: TCP
          volumeMounts:
          - name: config
            mountPath: /etc/qpid-dispatch
          - name: certs
            readOnly: true
            mountPath: /etc/qpid-dispatch-certs/
        volumes:
        - name: config
          configMap:
            name: ${APPLICATION_NAME}
        - name: certs
          secret:
            secretName: ${APPLICATION_NAME}-cert
        serviceAccount: ${APPLICATION_NAME}
        serviceAccountName: ${APPLICATION_NAME}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - router
        from:
          kind: ImageStreamTag
          name: amq-interconnect-11-openshift:latest
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: ImageChange
    - type: ConfigChange
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: ${APPLICATION_NAME}
  data:
    qdrouterd.conf: ${QDROUTERD_CONF}
- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: ${APPLICATION_NAME}
